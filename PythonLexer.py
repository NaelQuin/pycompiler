# Generated from PythonLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,363,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,3,12,141,8,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,
        18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
        21,1,21,3,21,176,8,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,
        26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,
        32,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,3,34,208,8,34,1,35,1,
        35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,
        36,224,8,36,1,37,1,37,5,37,228,8,37,10,37,12,37,231,9,37,1,38,1,
        38,1,38,3,38,236,8,38,1,39,1,39,1,40,1,40,1,40,5,40,243,8,40,10,
        40,12,40,246,9,40,1,40,1,40,1,40,1,40,5,40,252,8,40,10,40,12,40,
        255,9,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,5,40,264,8,40,10,40,
        12,40,267,9,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,5,40,
        278,8,40,10,40,12,40,281,9,40,1,40,1,40,1,40,3,40,286,8,40,1,41,
        1,41,1,41,3,41,291,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,
        1,44,1,44,1,44,1,44,1,44,3,44,306,8,44,1,45,4,45,309,8,45,11,45,
        12,45,310,1,46,1,46,1,46,5,46,316,8,46,10,46,12,46,319,9,46,1,46,
        3,46,322,8,46,1,47,3,47,325,8,47,1,47,3,47,328,8,47,1,47,1,47,1,
        47,1,48,1,48,1,48,1,48,5,48,337,8,48,10,48,12,48,340,9,48,1,49,1,
        49,1,49,1,49,5,49,346,8,49,10,49,12,49,349,9,49,1,50,1,50,3,50,353,
        8,50,1,50,1,50,1,51,4,51,358,8,51,11,51,12,51,359,1,51,1,51,0,0,
        52,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,0,33,0,35,0,37,0,39,0,41,0,43,16,45,17,47,18,49,
        19,51,20,53,21,55,22,57,23,59,24,61,25,63,26,65,27,67,28,69,29,71,
        30,73,31,75,32,77,33,79,0,81,34,83,0,85,0,87,0,89,35,91,0,93,0,95,
        0,97,0,99,0,101,36,103,37,1,0,12,2,0,38,38,124,124,3,0,65,90,95,
        95,97,122,4,0,48,57,65,90,95,95,97,122,4,0,33,47,58,64,91,95,123,
        126,2,0,34,34,92,92,9,0,34,34,39,39,47,47,92,92,98,98,102,102,110,
        110,114,114,116,116,3,0,48,57,65,70,97,102,1,0,48,57,2,0,43,43,45,
        45,1,0,48,55,2,0,69,69,101,101,2,0,13,13,32,32,389,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,81,1,0,0,0,0,89,1,0,0,0,0,101,1,0,0,0,0,103,
        1,0,0,0,1,105,1,0,0,0,3,107,1,0,0,0,5,109,1,0,0,0,7,111,1,0,0,0,
        9,113,1,0,0,0,11,115,1,0,0,0,13,117,1,0,0,0,15,119,1,0,0,0,17,121,
        1,0,0,0,19,123,1,0,0,0,21,126,1,0,0,0,23,129,1,0,0,0,25,140,1,0,
        0,0,27,142,1,0,0,0,29,149,1,0,0,0,31,153,1,0,0,0,33,155,1,0,0,0,
        35,157,1,0,0,0,37,160,1,0,0,0,39,163,1,0,0,0,41,166,1,0,0,0,43,175,
        1,0,0,0,45,177,1,0,0,0,47,179,1,0,0,0,49,181,1,0,0,0,51,183,1,0,
        0,0,53,185,1,0,0,0,55,187,1,0,0,0,57,189,1,0,0,0,59,191,1,0,0,0,
        61,193,1,0,0,0,63,195,1,0,0,0,65,197,1,0,0,0,67,199,1,0,0,0,69,207,
        1,0,0,0,71,209,1,0,0,0,73,223,1,0,0,0,75,225,1,0,0,0,77,235,1,0,
        0,0,79,237,1,0,0,0,81,285,1,0,0,0,83,287,1,0,0,0,85,292,1,0,0,0,
        87,298,1,0,0,0,89,305,1,0,0,0,91,308,1,0,0,0,93,312,1,0,0,0,95,324,
        1,0,0,0,97,332,1,0,0,0,99,341,1,0,0,0,101,350,1,0,0,0,103,357,1,
        0,0,0,105,106,5,10,0,0,106,2,1,0,0,0,107,108,5,13,0,0,108,4,1,0,
        0,0,109,110,5,9,0,0,110,6,1,0,0,0,111,112,5,32,0,0,112,8,1,0,0,0,
        113,114,5,43,0,0,114,10,1,0,0,0,115,116,5,45,0,0,116,12,1,0,0,0,
        117,118,5,42,0,0,118,14,1,0,0,0,119,120,5,47,0,0,120,16,1,0,0,0,
        121,122,5,37,0,0,122,18,1,0,0,0,123,124,5,42,0,0,124,125,5,42,0,
        0,125,20,1,0,0,0,126,127,5,60,0,0,127,128,5,60,0,0,128,22,1,0,0,
        0,129,130,5,62,0,0,130,131,5,62,0,0,131,24,1,0,0,0,132,141,3,9,4,
        0,133,141,3,11,5,0,134,141,3,13,6,0,135,141,3,15,7,0,136,141,3,17,
        8,0,137,141,3,19,9,0,138,141,3,21,10,0,139,141,3,23,11,0,140,132,
        1,0,0,0,140,133,1,0,0,0,140,134,1,0,0,0,140,135,1,0,0,0,140,136,
        1,0,0,0,140,137,1,0,0,0,140,138,1,0,0,0,140,139,1,0,0,0,141,26,1,
        0,0,0,142,143,5,108,0,0,143,144,5,97,0,0,144,145,5,109,0,0,145,146,
        5,98,0,0,146,147,5,100,0,0,147,148,5,97,0,0,148,28,1,0,0,0,149,150,
        5,110,0,0,150,151,5,111,0,0,151,152,5,116,0,0,152,30,1,0,0,0,153,
        154,5,60,0,0,154,32,1,0,0,0,155,156,5,62,0,0,156,34,1,0,0,0,157,
        158,5,61,0,0,158,159,5,61,0,0,159,36,1,0,0,0,160,161,5,33,0,0,161,
        162,5,61,0,0,162,38,1,0,0,0,163,164,5,60,0,0,164,165,5,61,0,0,165,
        40,1,0,0,0,166,167,5,62,0,0,167,168,5,61,0,0,168,42,1,0,0,0,169,
        176,3,31,15,0,170,176,3,33,16,0,171,176,3,35,17,0,172,176,3,37,18,
        0,173,176,3,39,19,0,174,176,3,41,20,0,175,169,1,0,0,0,175,170,1,
        0,0,0,175,171,1,0,0,0,175,172,1,0,0,0,175,173,1,0,0,0,175,174,1,
        0,0,0,176,44,1,0,0,0,177,178,5,40,0,0,178,46,1,0,0,0,179,180,5,41,
        0,0,180,48,1,0,0,0,181,182,5,91,0,0,182,50,1,0,0,0,183,184,5,93,
        0,0,184,52,1,0,0,0,185,186,5,123,0,0,186,54,1,0,0,0,187,188,5,125,
        0,0,188,56,1,0,0,0,189,190,5,44,0,0,190,58,1,0,0,0,191,192,5,61,
        0,0,192,60,1,0,0,0,193,194,5,46,0,0,194,62,1,0,0,0,195,196,5,58,
        0,0,196,64,1,0,0,0,197,198,5,59,0,0,198,66,1,0,0,0,199,200,5,35,
        0,0,200,68,1,0,0,0,201,202,5,97,0,0,202,203,5,110,0,0,203,208,5,
        100,0,0,204,205,5,111,0,0,205,208,5,114,0,0,206,208,7,0,0,0,207,
        201,1,0,0,0,207,204,1,0,0,0,207,206,1,0,0,0,208,70,1,0,0,0,209,210,
        5,78,0,0,210,211,5,111,0,0,211,212,5,110,0,0,212,213,5,101,0,0,213,
        72,1,0,0,0,214,215,5,84,0,0,215,216,5,114,0,0,216,217,5,117,0,0,
        217,224,5,101,0,0,218,219,5,70,0,0,219,220,5,97,0,0,220,221,5,108,
        0,0,221,222,5,115,0,0,222,224,5,101,0,0,223,214,1,0,0,0,223,218,
        1,0,0,0,224,74,1,0,0,0,225,229,7,1,0,0,226,228,7,2,0,0,227,226,1,
        0,0,0,228,231,1,0,0,0,229,227,1,0,0,0,229,230,1,0,0,0,230,76,1,0,
        0,0,231,229,1,0,0,0,232,233,5,32,0,0,233,236,5,32,0,0,234,236,3,
        5,2,0,235,232,1,0,0,0,235,234,1,0,0,0,236,78,1,0,0,0,237,238,7,3,
        0,0,238,80,1,0,0,0,239,244,5,34,0,0,240,243,3,83,41,0,241,243,8,
        4,0,0,242,240,1,0,0,0,242,241,1,0,0,0,243,246,1,0,0,0,244,242,1,
        0,0,0,244,245,1,0,0,0,245,247,1,0,0,0,246,244,1,0,0,0,247,286,5,
        34,0,0,248,253,5,39,0,0,249,252,3,83,41,0,250,252,8,4,0,0,251,249,
        1,0,0,0,251,250,1,0,0,0,252,255,1,0,0,0,253,251,1,0,0,0,253,254,
        1,0,0,0,254,256,1,0,0,0,255,253,1,0,0,0,256,286,5,39,0,0,257,258,
        5,34,0,0,258,259,5,34,0,0,259,260,5,34,0,0,260,265,1,0,0,0,261,264,
        3,83,41,0,262,264,8,4,0,0,263,261,1,0,0,0,263,262,1,0,0,0,264,267,
        1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,268,1,0,0,0,267,265,
        1,0,0,0,268,269,5,34,0,0,269,270,5,34,0,0,270,286,5,34,0,0,271,272,
        5,39,0,0,272,273,5,39,0,0,273,274,5,39,0,0,274,279,1,0,0,0,275,278,
        3,83,41,0,276,278,8,4,0,0,277,275,1,0,0,0,277,276,1,0,0,0,278,281,
        1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,282,1,0,0,0,281,279,
        1,0,0,0,282,283,5,39,0,0,283,284,5,39,0,0,284,286,5,39,0,0,285,239,
        1,0,0,0,285,248,1,0,0,0,285,257,1,0,0,0,285,271,1,0,0,0,286,82,1,
        0,0,0,287,290,5,92,0,0,288,291,7,5,0,0,289,291,3,85,42,0,290,288,
        1,0,0,0,290,289,1,0,0,0,291,84,1,0,0,0,292,293,5,117,0,0,293,294,
        3,87,43,0,294,295,3,87,43,0,295,296,3,87,43,0,296,297,3,87,43,0,
        297,86,1,0,0,0,298,299,7,6,0,0,299,88,1,0,0,0,300,306,3,91,45,0,
        301,306,3,93,46,0,302,306,3,95,47,0,303,306,3,97,48,0,304,306,3,
        99,49,0,305,300,1,0,0,0,305,301,1,0,0,0,305,302,1,0,0,0,305,303,
        1,0,0,0,305,304,1,0,0,0,306,90,1,0,0,0,307,309,7,7,0,0,308,307,1,
        0,0,0,309,310,1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,92,1,0,
        0,0,312,313,3,91,45,0,313,317,5,46,0,0,314,316,7,7,0,0,315,314,1,
        0,0,0,316,319,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,321,1,
        0,0,0,319,317,1,0,0,0,320,322,3,101,50,0,321,320,1,0,0,0,321,322,
        1,0,0,0,322,94,1,0,0,0,323,325,3,93,46,0,324,323,1,0,0,0,324,325,
        1,0,0,0,325,327,1,0,0,0,326,328,7,8,0,0,327,326,1,0,0,0,327,328,
        1,0,0,0,328,329,1,0,0,0,329,330,3,93,46,0,330,331,5,106,0,0,331,
        96,1,0,0,0,332,333,5,48,0,0,333,334,5,120,0,0,334,338,1,0,0,0,335,
        337,3,87,43,0,336,335,1,0,0,0,337,340,1,0,0,0,338,336,1,0,0,0,338,
        339,1,0,0,0,339,98,1,0,0,0,340,338,1,0,0,0,341,342,5,48,0,0,342,
        343,5,111,0,0,343,347,1,0,0,0,344,346,7,9,0,0,345,344,1,0,0,0,346,
        349,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,0,348,100,1,0,0,0,349,
        347,1,0,0,0,350,352,7,10,0,0,351,353,7,8,0,0,352,351,1,0,0,0,352,
        353,1,0,0,0,353,354,1,0,0,0,354,355,3,91,45,0,355,102,1,0,0,0,356,
        358,7,11,0,0,357,356,1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,
        360,1,0,0,0,360,361,1,0,0,0,361,362,6,51,0,0,362,104,1,0,0,0,27,
        0,140,175,207,223,229,235,242,244,251,253,263,265,277,279,285,290,
        305,310,317,321,324,327,338,347,352,359,1,6,0,0
    ]

class PythonLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LINE_BREAK = 1
    BEGIN_LINE = 2
    TAB = 3
    SPACE = 4
    ADD = 5
    SUB = 6
    MUL = 7
    DIV = 8
    MOD = 9
    POW = 10
    LSHIFT = 11
    RSHIFT = 12
    ARITIMETIC_OPERATORS = 13
    LAMBDA = 14
    NOT = 15
    RELATIONS = 16
    LPARENTHESIS = 17
    RPARENTHESIS = 18
    LBRACKET = 19
    RBRACKET = 20
    LBRACE = 21
    RBRACE = 22
    COMMA = 23
    ASSIGN = 24
    DOT = 25
    COLON = 26
    SEMI = 27
    HASH = 28
    LOGICAL_OPERATOR = 29
    NULL = 30
    BOOLEAN = 31
    ID = 32
    INDENT = 33
    STRING = 34
    NUMBER = 35
    EXP = 36
    WS = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\n'", "'\\r'", "'\\t'", "' '", "'+'", "'-'", "'*'", "'/'", 
            "'%'", "'**'", "'<<'", "'>>'", "'lambda'", "'not'", "'('", "')'", 
            "'['", "']'", "'{'", "'}'", "','", "'='", "'.'", "':'", "';'", 
            "'#'", "'None'" ]

    symbolicNames = [ "<INVALID>",
            "LINE_BREAK", "BEGIN_LINE", "TAB", "SPACE", "ADD", "SUB", "MUL", 
            "DIV", "MOD", "POW", "LSHIFT", "RSHIFT", "ARITIMETIC_OPERATORS", 
            "LAMBDA", "NOT", "RELATIONS", "LPARENTHESIS", "RPARENTHESIS", 
            "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "COMMA", "ASSIGN", 
            "DOT", "COLON", "SEMI", "HASH", "LOGICAL_OPERATOR", "NULL", 
            "BOOLEAN", "ID", "INDENT", "STRING", "NUMBER", "EXP", "WS" ]

    ruleNames = [ "LINE_BREAK", "BEGIN_LINE", "TAB", "SPACE", "ADD", "SUB", 
                  "MUL", "DIV", "MOD", "POW", "LSHIFT", "RSHIFT", "ARITIMETIC_OPERATORS", 
                  "LAMBDA", "NOT", "LT", "GT", "EQ", "NEQ", "LEQ", "GEQ", 
                  "RELATIONS", "LPARENTHESIS", "RPARENTHESIS", "LBRACKET", 
                  "RBRACKET", "LBRACE", "RBRACE", "COMMA", "ASSIGN", "DOT", 
                  "COLON", "SEMI", "HASH", "LOGICAL_OPERATOR", "NULL", "BOOLEAN", 
                  "ID", "INDENT", "SYMBOLS", "STRING", "ESC", "UNICODE", 
                  "HEX", "NUMBER", "INT", "DOUBLE", "COMPLEX", "HEXADECIMAL", 
                  "OCTAL", "EXP", "WS" ]

    grammarFileName = "PythonLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


